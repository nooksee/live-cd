#!/usr/bin/env bash

# LiveCD Creator 3
# Copyright (C) 2012-2014  Kevin Atwood
# 
# Customizer - Advanced LiveCD Remastering Tool
# Copyright (C) 2010-2013  Ivailo Monev
# 
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.

set -u
source /etc/live-cd/common
source /etc/live-cd/default

#################### Some functions used when error occurs #####################

__create_work_dirs__() {
	INFO_MESSAGE "Creating work directories"
	mkdir -p "$WORK_DIR/"{FileSystem,ISO} || ERROR_MESSAGE "Unable to create work directories!"
}

__clean__() {
	umount -fl "$MOUNT_DIR" 2> /dev/null
    __purge_work_dirs__
}

####################### Checking if the image file exists ######################

if [ ! -e "$ISO" ];then
	ERROR_MESSAGE "The image file does not exist!"
fi

################## Cleaning up previous temp folders if they exist #############

if [ -d "$WORK_DIR/FileSystem" ] || [ -d "$WORK_DIR/ISO" ];then
    __clean__
    __create_work_dirs__
else
	__create_work_dirs__
fi

############################# Mounting the image file ##########################
MOUNT_DIR="`mktemp -d --tmpdir=\"$MOUNT_DIR\"`"

INFO_MESSAGE "Mounting image file"
mount -t iso9660 -o ro,loop "$ISO" "$MOUNT_DIR" || ERROR_MESSAGE "Unable to mount image file!"

######################## Check if image file is usable #########################

INFO_MESSAGE "Checking image file"
if [ ! -d "$MOUNT_DIR/casper" ] || [ ! -d "$MOUNT_DIR/.disk" ] || \
 [ ! -d "$MOUNT_DIR/isolinux" ] || [ ! -e "$MOUNT_DIR/casper/filesystem.squashfs" ]; then
	ERROR_MESSAGE_NO_EXIT "This is not a usable image file!"
	__clean__
    exit 2
fi

######################### Extraction filesystem.squashfs #######################

INFO_MESSAGE "Extracting FileSystem"
unsquashfs -f -d "$WORK_DIR/FileSystem" "$MOUNT_DIR/casper/filesystem.squashfs" || ERROR_MESSAGE "Unable to extract filesystem.squashfs!"

################## Check the architecture of root FileSystem ###################

INFO_MESSAGE "Checking architecture"
ARCH=`chroot "$WORK_DIR/FileSystem" dpkg --print-architecture` || ERROR_MESSAGE "Unable to chroot and get architecture of root FileSystem!"
if [ "$ARCH" = "amd64" -o "" ] && [ "`uname -m`" != "x86_64" ]; then
	ERROR_MESSAGE_NO_EXIT "The image file's architecture is amd64, yours is not!"
	__clean__
    exit 2
fi


############ rsync the same files but exclude some that are not needed #########

INFO_MESSAGE "Copying extracted files"
rsync --exclude=/casper/* --exclude=/md5sum.txt --exclude=/README.diskdefines -a "$MOUNT_DIR/" "$WORK_DIR/ISO" || ERROR_MESSAGE "Unable to rsync files!"

############################## Unmount the image file ##########################
INFO_MESSAGE "Unmounting image file"
umount -f "$MOUNT_DIR" || EXTRA_ERROR_MESSAGE "Unable to unmount image file from" "$MOUNT_DIR"
rm -rf "$MOUNT_DIR"